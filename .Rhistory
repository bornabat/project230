getwd
getwd()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(project230)
rosenopt_gd()
sag = rosenopt_gd()
plot(sag[,3])
plot(sag[10:nrow(sag3),3])
plot(sag[10:nrow(sag),3])
plot(sag[10:nrow(sag),1])
plot(sag[10:nrow(sag),2])
devtools::document()
library(project230)
sag2 = rosenopt_fr()
plot(sag2[,3])
sag2 = rosenopt_pr()
plot(sag2[,3])
sag2 = rosenopt_m()
plot(sag2[,3])
sag2 = rosenopt_fr(n.iter = 1e6)
plot(sag2[,3])
sag2
library(project230)
sag2 = rosenopt_fr(n.iter = 1e6)
plot(sag2[,3])
dim(sag2)
sag2 = rosenopt_fr(n.iter = 1e3)
dim(sag2)
plot(sag2[,3])
plot(sag2[,1])
plot(sag2[,2])
library(project230)
sag3 = rosenopt_fr(n.iter = 1e3,alpha=0.001)
lines(sag3[,2],col='red')
points(sag3[,2],col='red')
points(sag3[,1],col='red')
sag3[nrow(sag3),]
sag2[nrow(sag2),]
plot(sag2[,3])
plot(sag2[10:nrow(sag2),3])
plot(sag3[10:nrow(sag3),3])
plot(sag2[10:nrow(sag2),3])
points(sag3[10:nrow(sag3),3],col='blue')
sag3 = rosenopt_fr(n.iter = 1e3,alpha=0.01)
points(sag3[10:nrow(sag3),3],col='red')
sag3[nrow(sag3),]
plot(sag2[10:nrow(sag2),3],ylim=c(0,10))
plot(sag2[10:nrow(sag2),3],ylim=c(0,20))
plot(sag2[,3],ylim=c(0,20))
points(sag3[,3],col='red')
sag3 = rosenopt_fr(n.iter = 1e3,alpha=0.001)
points(sag3[,3],col='red')
sag3 = rosenopt_fr(n.iter = 1e5,alpha=0.001)
points(sag3[,3],col='red')
sag3[nrow(sag3)]
sag3[nrow(sag3),]
sag3 = rosenopt_fr(n.iter = 1e6,alpha=0.001)
sag3[nrow(sag3),]
sag3 = rosenopt_fr(init=c(2,2),n.iter = 1e6,alpha=0.001)
sag3[nrow(sag3),]
sag3 = rosenopt_fr(init=c(2,6),n.iter = 1e6,alpha=0.001)
sag3[nrow(sag3),]
sag3 = rosenopt_fr(init=c(5,6),n.iter = 1e6,alpha=0.001)
sag3[nrow(sag3),]
sag3 = rosenopt_fr(init=c(5,5),n.iter = 1e6,alpha=0.001)
sag3[nrow(sag3),]
sag3 = rosenopt_fr(init=c(5,5),n.iter = 1e7,alpha=0.001)
sag3[nrow(sag3),]
devtools::document()
library(project230)
sag3 = rosenopt_nm()
sag3 = rosenopt_m()
library(project230)
sag3 = rosenopt_nm()
plot(sag3[,3])
plot(sag3[,2])
sag3 = rosenopt_nm(init=c(2,2))
plot(sag3[,2])
sag3 = rosenopt_nm(init=c(2,2),n.iter=1e5)
plot(sag3[,2])
devtools::document()
library(project230)
sag3 = rosenopt_bfgs(init=c(2,2),n.iter=1e5)
devtools::document()
library(project230)
sag3 = rosenopt_bfgs(init=c(2,2),n.iter=1e5)
devtools::document()
library(project230)
sag3 = rosenopt_bfgs(init=c(2,2),n.iter=1e5)
library(project230)
sag3 = rosenopt_bfgs(init=c(2,2),n.iter=1e5)
library(project230)
sag3 = rosenopt_bfgs(init=c(2,2),n.iter=1e5)
alp.org=alpha
xyz = matrix(nrow = n.iter, ncol = 3)
vals = init
lk = rosenbrock(vals[1], vals[2])
grads = rosen_grad(vals[1], vals[2])
H = diag(2)  # initialize Hessian approximation as identity matrix
n.iter=1e3
alpha=1
epsilon=1e-6
init= c(5,5)
alp.org=alpha
xyz = matrix(nrow = n.iter, ncol = 3)
vals = init
lk = rosenbrock(vals[1], vals[2])
grads = rosen_grad(vals[1], vals[2])
H = diag(2)  # initialize Hessian approximation as identity matrix
vals.candid = vals - alpha * solve(H, grads)
lk.candid = rosenbrock(vals.candid[1], vals.candid[2])
lk.candid
lk
alpha=0.001
vals.candid = vals - alpha * solve(H, grads)
lk.candid = rosenbrock(vals.candid[1], vals.candid[2])
lk.candid
lk
alpha=0.00001
vals.candid = vals - alpha * solve(H, grads)
lk.candid = rosenbrock(vals.candid[1], vals.candid[2])
lk.candid
s = matrix(vals.candid - vals, nrow = 2, ncol = 1)
y = matrix(rosen_grad(vals.candid[1], vals.candid[2]) - grads, nrow = 2, ncol = 1)
s
y
rho = 1 / (t(y) %*% s)
rho
s %*% t(y)
rho = 1 / (t(y) %*% s)
I = diag(2)
H = (I - c(rho) * (s %*% t(y))) %*% H %*% (I - c(rho) * (y %*% t(s))) + c(rho) * (s %*% t(s))
H
library(project230)
sag3 = rosenopt_bfgs(init=c(5,5),n.iter=1e5)
H
solve(G)
solve(H)
?solve
solve(H,grads)
solve(H)%*%grads
vals - alpha * solve(H, grads)
vals - alpha * solve(H)%*% grads
